(()=>{var e,t={2634:()=>{},5358:(e,t,n)=>{var r={"./af":5177,"./af.js":5177,"./ar":1509,"./ar-dz":1488,"./ar-dz.js":1488,"./ar-kw":8676,"./ar-kw.js":8676,"./ar-ly":2353,"./ar-ly.js":2353,"./ar-ma":4496,"./ar-ma.js":4496,"./ar-ps":6947,"./ar-ps.js":6947,"./ar-sa":2682,"./ar-sa.js":2682,"./ar-tn":9756,"./ar-tn.js":9756,"./ar.js":1509,"./az":5533,"./az.js":5533,"./be":8959,"./be.js":8959,"./bg":7777,"./bg.js":7777,"./bm":4903,"./bm.js":4903,"./bn":1290,"./bn-bd":7357,"./bn-bd.js":7357,"./bn.js":1290,"./bo":1545,"./bo.js":1545,"./br":1470,"./br.js":1470,"./bs":4429,"./bs.js":4429,"./ca":7306,"./ca.js":7306,"./cs":6464,"./cs.js":6464,"./cv":3635,"./cv.js":3635,"./cy":4226,"./cy.js":4226,"./da":3601,"./da.js":3601,"./de":7853,"./de-at":6111,"./de-at.js":6111,"./de-ch":4697,"./de-ch.js":4697,"./de.js":7853,"./dv":708,"./dv.js":708,"./el":4691,"./el.js":4691,"./en-au":3872,"./en-au.js":3872,"./en-ca":8298,"./en-ca.js":8298,"./en-gb":6195,"./en-gb.js":6195,"./en-ie":6584,"./en-ie.js":6584,"./en-il":5543,"./en-il.js":5543,"./en-in":9033,"./en-in.js":9033,"./en-nz":9402,"./en-nz.js":9402,"./en-sg":3004,"./en-sg.js":3004,"./eo":2934,"./eo.js":2934,"./es":7650,"./es-do":838,"./es-do.js":838,"./es-mx":7730,"./es-mx.js":7730,"./es-us":6575,"./es-us.js":6575,"./es.js":7650,"./et":3035,"./et.js":3035,"./eu":3508,"./eu.js":3508,"./fa":119,"./fa.js":119,"./fi":527,"./fi.js":527,"./fil":5995,"./fil.js":5995,"./fo":2477,"./fo.js":2477,"./fr":5498,"./fr-ca":6435,"./fr-ca.js":6435,"./fr-ch":7892,"./fr-ch.js":7892,"./fr.js":5498,"./fy":7071,"./fy.js":7071,"./ga":1734,"./ga.js":1734,"./gd":217,"./gd.js":217,"./gl":7329,"./gl.js":7329,"./gom-deva":2124,"./gom-deva.js":2124,"./gom-latn":3383,"./gom-latn.js":3383,"./gu":5050,"./gu.js":5050,"./he":1713,"./he.js":1713,"./hi":3861,"./hi.js":3861,"./hr":6308,"./hr.js":6308,"./hu":609,"./hu.js":609,"./hy-am":7160,"./hy-am.js":7160,"./id":4063,"./id.js":4063,"./is":9374,"./is.js":9374,"./it":8383,"./it-ch":1827,"./it-ch.js":1827,"./it.js":8383,"./ja":3827,"./ja.js":3827,"./jv":9722,"./jv.js":9722,"./ka":1794,"./ka.js":1794,"./kk":7088,"./kk.js":7088,"./km":6870,"./km.js":6870,"./kn":4451,"./kn.js":4451,"./ko":3164,"./ko.js":3164,"./ku":8174,"./ku-kmr":6181,"./ku-kmr.js":6181,"./ku.js":8174,"./ky":8474,"./ky.js":8474,"./lb":9680,"./lb.js":9680,"./lo":5867,"./lo.js":5867,"./lt":5766,"./lt.js":5766,"./lv":9532,"./lv.js":9532,"./me":8076,"./me.js":8076,"./mi":1848,"./mi.js":1848,"./mk":306,"./mk.js":306,"./ml":3739,"./ml.js":3739,"./mn":9053,"./mn.js":9053,"./mr":6169,"./mr.js":6169,"./ms":3386,"./ms-my":2297,"./ms-my.js":2297,"./ms.js":3386,"./mt":7075,"./mt.js":7075,"./my":2264,"./my.js":2264,"./nb":2274,"./nb.js":2274,"./ne":8235,"./ne.js":8235,"./nl":2572,"./nl-be":3784,"./nl-be.js":3784,"./nl.js":2572,"./nn":4566,"./nn.js":4566,"./oc-lnc":9330,"./oc-lnc.js":9330,"./pa-in":9849,"./pa-in.js":9849,"./pl":4418,"./pl.js":4418,"./pt":9834,"./pt-br":8303,"./pt-br.js":8303,"./pt.js":9834,"./ro":4457,"./ro.js":4457,"./ru":2271,"./ru.js":2271,"./sd":1221,"./sd.js":1221,"./se":3478,"./se.js":3478,"./si":7538,"./si.js":7538,"./sk":5784,"./sk.js":5784,"./sl":6637,"./sl.js":6637,"./sq":6794,"./sq.js":6794,"./sr":5719,"./sr-cyrl":3322,"./sr-cyrl.js":3322,"./sr.js":5719,"./ss":6e3,"./ss.js":6e3,"./sv":1011,"./sv.js":1011,"./sw":748,"./sw.js":748,"./ta":1025,"./ta.js":1025,"./te":1885,"./te.js":1885,"./tet":8861,"./tet.js":8861,"./tg":6571,"./tg.js":6571,"./th":5802,"./th.js":5802,"./tk":9527,"./tk.js":9527,"./tl-ph":9231,"./tl-ph.js":9231,"./tlh":1052,"./tlh.js":1052,"./tr":5096,"./tr.js":5096,"./tzl":9846,"./tzl.js":9846,"./tzm":1765,"./tzm-latn":7711,"./tzm-latn.js":7711,"./tzm.js":1765,"./ug-cn":8414,"./ug-cn.js":8414,"./uk":6618,"./uk.js":6618,"./ur":158,"./ur.js":158,"./uz":7609,"./uz-latn":2475,"./uz-latn.js":2475,"./uz.js":7609,"./vi":1135,"./vi.js":1135,"./x-pseudo":4051,"./x-pseudo.js":4051,"./yo":2218,"./yo.js":2218,"./zh-cn":2648,"./zh-cn.js":2648,"./zh-hk":1632,"./zh-hk.js":1632,"./zh-mo":1541,"./zh-mo.js":1541,"./zh-tw":304,"./zh-tw.js":304};function o(e){var t=i(e);return n(t)}function i(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=i,e.exports=o,o.id=5358},7537:(e,t,n)=>{"use strict";var r=n(6540),o=n(961),i=n(8257);function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach(function(t){s(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function s(e,t,n){return(t=function(e){var t=function(e){if("object"!=a(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=a(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==a(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var f=[];var p=n(5093),y=n.n(p);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach(function(t){j(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function j(e,t,n){return(t=function(e){var t=function(e){if("object"!=m(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==m(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var v={text:"",sortBy:"date",startDate:y()().startOf("month"),endDate:y()().endOf("month")};var h=n(4625),g=n(6347),E=n(1225);const O=function(e){var t=e.id,n=e.description,o=e.amount,i=e.createdAt;return r.createElement("div",null,r.createElement(h.N_,{to:"/edit/".concat(t)},n),r.createElement("p",null,o," - ",y()(i).format("LL")))},w=function(e,t){var n=t.text,r=t.sortBy,o=t.startDate,i=t.endDate;return e.filter(function(e){var t=y()(e.createdAt),r=!o||o.isSameOrBefore(t),a=!i||i.isSameOrAfter(t),u="string"!=typeof n||e.description.toLowerCase().includes(n.toLowerCase());return r&&a&&u}).sort(function(e,t){return"date"===r?e.createdAt<=t.createdAt?1:-1:"amount"===r?e.amount<=t.amount?1:-1:void 0})};function S(){return S=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},S.apply(null,arguments)}const P=(0,E.Ng)(function(e){return{expenses:w(e.expenses,e.filter)}})(function(e){return r.createElement("div",null,r.createElement("h1",null,"ExpenseList"),0==e.expenses.length&&r.createElement("p",null,"No Expense Found"),e.expenses.length>0&&e.expenses.map(function(e){return r.createElement(O,S({key:e.id},e))}))});n(4684);var _=n(3292);function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,N(r.key),r)}}function T(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(T=function(){return!!e})()}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}function A(e,t,n){return(t=N(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function N(e){var t=function(e){if("object"!=D(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=D(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==D(t)?t:t+""}var R=function(e){function t(){var e;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return A(e=function(e,t,n){return t=k(t),function(e,t){if(t&&("object"==D(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,T()?Reflect.construct(t,n||[],k(e).constructor):t.apply(e,n))}(this,t,[].concat(r)),"state",{calenderFocused:null}),A(e,"onDatesChange",function(t){var n=t.startDate,r=t.endDate;e.props.setStartDate(n),e.props.setEndDate(r)}),A(e,"onFocusChange",function(t){e.setState(function(){return{calenderFocused:t}})}),A(e,"onTextChange",function(t){e.props.editText(t.target.value)}),A(e,"onSortByChange",function(t){"date"===t.target.value?e.props.sortByDate():e.props.sortByAmount()}),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(t,e),n=t,(o=[{key:"render",value:function(){return r.createElement("div",null,r.createElement("input",{type:"text",value:this.props.filter.text,onChange:this.onTextChange}),r.createElement("select",{value:this.props.filter.sortBy,onChange:this.onSortByChange},r.createElement("option",{value:"date"},"Date"),r.createElement("option",{value:"amount"},"Amount")),r.createElement(_.DateRangePicker,{startDateId:"your_unique_start_date_id",endDateId:"your_unique_end_date_id",startDate:this.props.filter.startDate,endDate:this.props.filter.endDate,onDatesChange:this.onDatesChange,focusedInput:this.state.calenderFocused,onFocusChange:this.onFocusChange,numberOfMonths:1,isOutsideRange:function(){return!1},showClearDates:!0}))}}])&&x(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,o}(r.Component);const B=(0,E.Ng)(function(e){return{filter:e.filter}},function(e){return{setStartDate:function(t){e(function(){return{type:"SET_START_DATE",startDate:arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0}}(t))},setEndDate:function(t){e(function(){return{type:"SET_END_DATE",endDate:arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0}}(t))},editText:function(t){e(function(){return{type:"EDIT_TEXT",text:arguments.length>0&&void 0!==arguments[0]?arguments[0]:""}}(t))},sortByDate:function(){e({type:"SORT_BY_DATE"})},sortByAmount:function(){e({type:"SORT_BY_AMOUNT"})}}})(R),z=function(){return r.createElement("div",null,r.createElement(B,null),r.createElement(P,null))};function F(e){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},F(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,U(r.key),r)}}function M(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(M=function(){return!!e})()}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}function X(e,t){return X=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},X(e,t)}function q(e,t,n){return(t=U(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function U(e){var t=function(e){if("object"!=F(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=F(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==F(t)?t:t+""}var H=function(e){function t(){var e;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return q(e=function(e,t,n){return t=L(t),function(e,t){if(t&&("object"==F(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,M()?Reflect.construct(t,n||[],L(e).constructor):t.apply(e,n))}(this,t,[].concat(r)),"state",{description:e.props.expense?e.props.expense.description:"",note:e.props.expense?e.props.expense.note:"",amount:e.props.expense?e.props.expense.amount.toString():"",createdAt:e.props.expense?y()(e.props.expense.createdAt):y()(),calenderFocused:!1,error:void 0}),q(e,"OnDescriptionChange",function(t){var n=t.target.value;e.setState(function(){return{description:n}})}),q(e,"OnNoteChange",function(t){var n=t.target.value;e.setState(function(){return{note:n}})}),q(e,"OnAmountChange",function(t){var n=t.target.value;n&&!n.match(/^\d{1,}(\.\d{0,2})?$/)||e.setState(function(){return{amount:n}})}),q(e,"onDateChangeHere",function(t){t&&e.setState(function(){return{createdAt:t}})}),q(e,"onFocusChange",function(t){var n=t.focused;e.setState(function(){return{calenderFocused:n}})}),q(e,"onSubmitChange",function(t){t.preventDefault(),e.state.description&&e.state.amount?(e.setState(function(){return{error:void 0}}),e.props.onSubmit({description:e.state.description,note:e.state.note,createdAt:e.state.createdAt.valueOf(),amount:parseFloat(e.state.amount,10)})):e.setState(function(){return{error:"Please provide the description and amount"}})}),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&X(e,t)}(t,e),n=t,(o=[{key:"render",value:function(){return r.createElement("div",null,r.createElement("h1",null,"ExpenseForm"),r.createElement("h2",null,this.state.error),r.createElement("form",{onSubmit:this.onSubmitChange},r.createElement("input",{type:"text",placeholder:"Description",value:this.state.description,autoFocus:!0,onChange:this.OnDescriptionChange}),r.createElement("input",{type:"text",placeholder:"Amount",value:this.state.amount,onChange:this.OnAmountChange}),r.createElement("textarea",{placeholder:"Add a Note",value:this.state.note,onChange:this.OnNoteChange,optional:!0}),r.createElement(_.SingleDatePicker,{date:this.state.createdAt,onDateChange:this.onDateChangeHere,focused:this.state.calenderFocused,onFocusChange:this.onFocusChange,numberOfMonths:1,isOutsideRange:function(){return!1}}),r.createElement("button",null,"Add Expense")))}}])&&I(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,o}(r.Component),Y=n(5279);function V(e){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},V(e)}function $(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Q(r.key),r)}}function K(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(K=function(){return!!e})()}function G(e){return G=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},G(e)}function J(e,t){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},J(e,t)}function Q(e){var t=function(e){if("object"!=V(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=V(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==V(t)?t:t+""}var W=function(e){function t(){var e,n,r,o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,a=new Array(i),u=0;u<i;u++)a[u]=arguments[u];return e=function(e,t,n){return t=G(t),function(e,t){if(t&&("object"==V(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,K()?Reflect.construct(t,n||[],G(e).constructor):t.apply(e,n))}(this,t,[].concat(a)),n=e,o=function(t){e.props.addNewExpense(t),e.props.history.push("/")},(r=Q(r="onSubmit"))in n?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&J(e,t)}(t,e),n=t,(o=[{key:"render",value:function(){return r.createElement("div",null,r.createElement(H,{onSubmit:this.onSubmit}))}}])&&$(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,o}(r.Component);const Z=(0,E.Ng)(void 0,function(e){return{addNewExpense:function(t){e(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.description,n=void 0===t?"":t,r=e.note,o=void 0===r?"":r,i=e.amount,a=void 0===i?0:i,u=e.createdAt,c=void 0===u?"":u;return{type:"ADD_EXPENSE",expense:{id:(0,Y.A)(),description:n,note:o,amount:a,createdAt:c}}}(t))}}})(W);function ee(e){return ee="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ee(e)}function te(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,ae(r.key),r)}}function ne(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(ne=function(){return!!e})()}function re(e){return re=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},re(e)}function oe(e,t){return oe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},oe(e,t)}function ie(e,t,n){return(t=ae(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ae(e){var t=function(e){if("object"!=ee(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=ee(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ee(t)?t:t+""}var ue=function(e){function t(){var e;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return ie(e=function(e,t,n){return t=re(t),function(e,t){if(t&&("object"==ee(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,ne()?Reflect.construct(t,n||[],re(e).constructor):t.apply(e,n))}(this,t,[].concat(r)),"onSubmitChange",function(t){e.props.editNewExpense(t),e.props.history.push("/")}),ie(e,"onRemove",function(){e.props.removeNewExpense(),e.props.history.push("/")}),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&oe(e,t)}(t,e),n=t,(o=[{key:"render",value:function(){return r.createElement("div",null,r.createElement(H,{expense:this.props.expense,onSubmit:this.onSubmitChange}),r.createElement("button",{onClick:this.onRemove},"Remove"))}}])&&te(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,o}(r.Component);const ce=(0,E.Ng)(function(e,t){return{expense:e.expenses.find(function(e){return e.id===t.match.params.id})}},function(e,t){return{editNewExpense:function(n){e({id:t.match.params.id,type:"EDIT_EXPENSE",updates:n})},removeNewExpense:function(){e(function(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).id;return{type:"REMOVE_EXPENSE",id:void 0===e?"":e}}({id:t.match.params.id}))}}})(ue),se=function(){return r.createElement("p",null,"This is a Not Found 404 Page - ",r.createElement(h.N_,{to:"/"},"Go to Home Page"))},le=function(){return r.createElement("p",null,"This is a help Page")},fe=function(){return r.createElement("div",null,r.createElement("h1",null,"Expensify App"),r.createElement(h.k2,{to:"/",activeClassName:"nav-properties",exact:!0},"DashboardPage Link"),r.createElement("br",null),r.createElement(h.k2,{to:"/create",activeClassName:"nav-properties"},"Create Page Link"),r.createElement("br",null),r.createElement(h.k2,{to:"/edit",activeClassName:"nav-properties"},"Edit Page Link"),r.createElement("br",null),r.createElement(h.k2,{to:"/help",activeClassName:"nav-properties"},"Help Page Link"),r.createElement("br",null))},pe=function(){return r.createElement(h.Kd,null,r.createElement("div",null,r.createElement(fe,null),r.createElement(g.dO,null,r.createElement(g.qh,{path:"/",component:z,exact:!0}),r.createElement(g.qh,{path:"/create",component:Z}),r.createElement(g.qh,{path:"/edit/:id",component:ce,exact:!0}),r.createElement(g.qh,{path:"/edit",component:ce}),r.createElement(g.qh,{path:"/help",component:le}),r.createElement(g.qh,{path:"*",component:se}))))};var ye=(0,i.y$)((0,i.HY)({expenses:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:f,n=arguments.length>1?arguments[1]:void 0;switch(n.type){case"ADD_EXPENSE":return[].concat(function(e){if(Array.isArray(e))return l(e)}(e=t)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return l(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?l(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[n.expense]);case"REMOVE_EXPENSE":return t.filter(function(e){return e.id!==n.id});case"EDIT_EXPENSE":return t.map(function(e){return e.id===n.id?c(c({},e),n.updates):e});default:return t}},filter:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"EDIT_TEXT":return d(d({},e),{},{text:t.text});case"SORT_BY_AMOUNT":return d(d({},e),{},{sortBy:"amount"});case"SORT_BY_DATE":return d(d({},e),{},{sortBy:"date"});case"SET_START_DATE":return d(d({},e),{},{startDate:t.startDate});case"SET_END_DATE":return d(d({},e),{},{endDate:t.endDate});default:return e}}}),window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__()),me=r.createElement(E.Kq,{store:ye},r.createElement(pe,null));o.render(me,document.getElementById("newApp"))}},n={};function r(e){var o=n[e];if(void 0!==o)return o.exports;var i=n[e]={id:e,loaded:!1,exports:{}};return t[e].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}r.m=t,e=[],r.O=(t,n,o,i)=>{if(!n){var a=1/0;for(l=0;l<e.length;l++){for(var[n,o,i]=e[l],u=!0,c=0;c<n.length;c++)(!1&i||a>=i)&&Object.keys(r.O).every(e=>r.O[e](n[c]))?n.splice(c--,1):(u=!1,i<a&&(a=i));if(u){e.splice(l--,1);var s=o();void 0!==s&&(t=s)}}return t}i=i||0;for(var l=e.length;l>0&&e[l-1][2]>i;l--)e[l]=e[l-1];e[l]=[n,o,i]},r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e={792:0};r.O.j=t=>0===e[t];var t=(t,n)=>{var o,i,[a,u,c]=n,s=0;if(a.some(t=>0!==e[t])){for(o in u)r.o(u,o)&&(r.m[o]=u[o]);if(c)var l=c(r)}for(t&&t(n);s<a.length;s++)i=a[s],r.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return r.O(l)},n=self.webpackChunkExpensify_App=self.webpackChunkExpensify_App||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var o=r.O(void 0,[33],()=>r(7537));o=r.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,